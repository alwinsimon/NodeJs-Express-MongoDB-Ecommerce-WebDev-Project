# ===================================================== Production Branch CI-CD Configuration =====================================================


name: Production-Branch-Deployment-CI-CD

# Trigger the action if and only if a pull request was PUSHED or MERGED into production branch
# This workflow will do a final CI before deploying changes to Production server with CD

on:

  push:
    branches:
      - [ "production-branch" ]

  pull_request:
    types:
      - closed
    branches:
      - [ "production-branch" ]
    if: ${{ github.event.pull_request.merged }}

jobs:

  # ========================== Production-Branch-Pre-Deployment-Tests ==========================

  Production-Branch-Pre-Deployment-Tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    #  Runs the following commands on the newely created linux instance for integration testing


    # Installing Node.js at the test instance
    - name: Setting up Node.js ${{ matrix.node-version }}
    
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'


    # Printing the node version in the terminal
    - run: node --version

    # Installation of Node packaging Manager (npm)
    - name: Installing Node packaging Manager (npm)
    - run: npm ci


    # Setting up the environment variable from using credentials stored in Github actions secret
    - name: Seting-up environment variables
      run: |
        echo "MY_ENV_VARIABLE=${{ secrets.ENV_FILE }}" >> .env
        cat .env


    # Installation of Node packaging Manager (npm)
    - name: Installing project dependencies
    - run: npm install

    
    # Checking if node modules was installed (Done by simply checking if node modules library exists or not)
    - name: Checking if Node Modules directory was created after installing NPM

      run: |
        if [ ! -d "node_modules" ]; then
        
          echo "Error: Node Modules directory check Failed: node_modules directory does not exist."
          
          exit 1
        fi

  # ========================== Production-Branch-Deployment ==========================

  Production-Branch-Deployment:

    runs-on: ubuntu-latest

    needs: Production-Branch-Pre-Deployment-Tests

    # Deployment steps
    steps:

    - name: Deploying To Production Server

      uses: appleboy/ssh-action@master

      with:

        host: ${{secrets.EC2_PUBLIC_IP}}

        username: ubuntu

        key: ${{secrets.EC2_SSH_KEY}}

        script: |

          echo "Connected to Production Server instance"

          # Commands for deploying changes to server
          
          cd ExpressJs-Ecommerce-webdev-project-1

          git pull

          sudo pm2 reload all
